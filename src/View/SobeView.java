/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControllAdmin;
import Model.Soba;
import Model.TipSobe;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author veron
 */
public class SobeView extends javax.swing.JDialog {

    Object[] options = {"Potvrdi", "Odustani"};

    /**
     * Creates new form SobeView
     */
    public SobeView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        prikaziTipoveSoba();
        prikaziSobe();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chNovoRezervirana = new javax.swing.JCheckBox();
        btnAzurirajSobu = new javax.swing.JButton();
        btnOdustaniSoba = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtNoviBrojSobe = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNovaCijenaSobe = new javax.swing.JTextField();
        txtBrojSobe = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCijenaSobe = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmbTipSobe = new javax.swing.JComboBox<>();
        chLjubimci = new javax.swing.JCheckBox();
        chPusenje = new javax.swing.JCheckBox();
        chRezervirana = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSobe = new javax.swing.JTable();
        btnSPremiSobu = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        chNovoLjubimci = new javax.swing.JCheckBox();
        chNovoPusenje = new javax.swing.JCheckBox();
        cmbNoviTipSobe = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(565, 550));

        chNovoRezervirana.setText("Rezervirana");

        btnAzurirajSobu.setText("Ažuriraj");
        btnAzurirajSobu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAzurirajSobuActionPerformed(evt);
            }
        });

        btnOdustaniSoba.setText("Odustani");
        btnOdustaniSoba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdustaniSobaActionPerformed(evt);
            }
        });

        jLabel1.setText("Unos nove sobe");

        jLabel2.setText("Broj sobe:");

        jLabel3.setText("Cijena noćenja:");

        jLabel4.setText("Tip sobe:");

        chLjubimci.setText("Dozvoljeni ljubimci");

        chPusenje.setText("Dozvoljeno pušenje");

        chRezervirana.setText("Rezervirana");

        tblSobe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Šifra","Broj sobe","Tip sobe","Pušenje","Ljubimci", "Rezervirana","Cijena"
            }
        ));
        tblSobe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSobeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSobe);

        btnSPremiSobu.setText("Spremi");
        btnSPremiSobu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSPremiSobuActionPerformed(evt);
            }
        });

        jLabel5.setText("Ažuriranje sobe");

        jLabel6.setText("Novi broj sobe:");

        jLabel7.setText("Nova cijena noćenja:");

        jLabel8.setText("Novi tip sobe:");

        chNovoLjubimci.setText("Dozvoljeni ljubimci");

        chNovoPusenje.setText("Dozvoljeno pušenje");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtBrojSobe)
                                    .addComponent(txtCijenaSobe)
                                    .addComponent(cmbTipSobe, 0, 130, Short.MAX_VALUE))
                                .addGap(82, 82, 82)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(chRezervirana)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnAzurirajSobu))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(chLjubimci)
                                            .addComponent(chPusenje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnSPremiSobu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNoviBrojSobe, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                    .addComponent(txtNovaCijenaSobe)
                                    .addComponent(cmbNoviTipSobe, 0, 135, Short.MAX_VALUE))
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chNovoRezervirana)
                                    .addComponent(chNovoLjubimci)
                                    .addComponent(chNovoPusenje))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addContainerGap(173, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(btnOdustaniSoba)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtBrojSobe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chLjubimci))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCijenaSobe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chPusenje))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbTipSobe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chRezervirana))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSPremiSobu)
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtNoviBrojSobe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chNovoPusenje))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtNovaCijenaSobe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chNovoLjubimci))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(chNovoRezervirana)
                    .addComponent(btnAzurirajSobu)
                    .addComponent(cmbNoviTipSobe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(btnOdustaniSoba)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSPremiSobuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSPremiSobuActionPerformed
        try {
            if (txtBrojSobe.getText().isEmpty() || txtCijenaSobe.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nisu uneseni svi podaci!", "Upozorenje", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            int n = JOptionPane.showOptionDialog(null, "Želite li spremiti novu sobu?", "Potvrda prijave", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null);

            if (n == 0) {
                String brojSobe = txtBrojSobe.getText();
                double cijenaSobe = Double.parseDouble(txtCijenaSobe.getText());
                String tipSobe = (String) cmbTipSobe.getSelectedItem();
                boolean ljubimci = chLjubimci.isSelected();
                boolean pusenje = chPusenje.isSelected();
                boolean rezervirana = chRezervirana.isSelected();

                Soba soba = new Soba();
                soba.setBroj_sobe(brojSobe);
                soba.setCijena(cijenaSobe);
                soba.setDozvoljeni_ljubimci(ljubimci);
                soba.setDozvoljeno_pusenje(pusenje);
                soba.setRezervirana(rezervirana);

                List<Model.TipSobe> lista = controll.dohvatiTipoveSoba();
                for (Model.TipSobe tipS : lista) {
                    if (tipS.getOpis_tipa_sobe().equals(tipSobe)) {
                        soba.setSifra_tipa(tipS);
                    }
                }

                String potvrda = controll.spremiSobu(soba);
                JOptionPane.showMessageDialog(this, potvrda);

                txtBrojSobe.setText("");
                txtCijenaSobe.setText("");
                chLjubimci.setSelected(false);
                chPusenje.setSelected(false);
                chRezervirana.setSelected(false);
                prikaziSobe();

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex, "Greška!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSPremiSobuActionPerformed

    private void tblSobeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSobeMouseClicked
        int red = tblSobe.getSelectedRow();
        int tipSobe = Integer.parseInt(tblSobe.getValueAt(red, 2).toString()) - 1;

        txtNoviBrojSobe.setText(tblSobe.getValueAt(red, 1).toString());
        txtNovaCijenaSobe.setText(tblSobe.getValueAt(red, 6).toString());
        cmbNoviTipSobe.setSelectedIndex(tipSobe);
        String pusenje = tblSobe.getValueAt(red, 3).toString();
        String ljubimci = tblSobe.getValueAt(red, 4).toString();
        String rezervirana = tblSobe.getValueAt(red, 5).toString();
        if (pusenje == "true") {
            chNovoPusenje.setSelected(true);
        } else if (pusenje != "true") {
            chNovoPusenje.setSelected(false);
        }
        if (ljubimci == "true") {
            chNovoLjubimci.setSelected(true);
        } else if (ljubimci != "true") {
            chNovoLjubimci.setSelected(false);
        }
        if (rezervirana == "true") {
            chNovoRezervirana.setSelected(true);
        } else if (rezervirana != "true") {
            chNovoRezervirana.setSelected(false);
        }
    }//GEN-LAST:event_tblSobeMouseClicked

    private void btnAzurirajSobuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAzurirajSobuActionPerformed
        if (tblSobe.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Niste odabrali sobu koju želite ažurirati!", "Upozorenje!", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try {
            if (txtNoviBrojSobe.getText().isEmpty() || txtNovaCijenaSobe.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nisu uneseni svi podaci!", "Upozorenje!", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            int n = JOptionPane.showOptionDialog(null, "Želite li ažurirati sobu?", "Potvrda ažuriranja", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null);
            if (n == 0) {
                int red = tblSobe.getSelectedRow();
                int sifraSobe = Integer.parseInt(tblSobe.getValueAt(red, 0).toString());
                String brojSobe = txtNoviBrojSobe.getText();
                Double cijena = Double.parseDouble(txtNovaCijenaSobe.getText());
                String opisTipaSobe = (String) cmbNoviTipSobe.getSelectedItem();
                TipSobe tipSobe = controll.dohvatiTipSobe(opisTipaSobe);
                boolean ljubimci = chNovoLjubimci.isSelected();
                boolean pusenje = chNovoPusenje.isSelected();
                boolean rezervirana = chNovoRezervirana.isSelected();

                Soba soba = new Soba();
                soba.setSifra_sobe(sifraSobe);
                soba.setBroj_sobe(brojSobe);
                soba.setCijena(cijena);
                soba.setSifra_tipa(tipSobe);
                soba.setDozvoljeni_ljubimci(ljubimci);
                soba.setDozvoljeno_pusenje(pusenje);
                soba.setRezervirana(rezervirana);

                String potvrda = controll.azurirajSobu(soba);
                JOptionPane.showMessageDialog(this, potvrda);

                txtNoviBrojSobe.setText("");
                txtNovaCijenaSobe.setText("");
                chNovoLjubimci.setSelected(false);
                chNovoPusenje.setSelected(false);
                chNovoRezervirana.setSelected(false);
                prikaziSobe();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Niste unesli sve podatke!", "Greška!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAzurirajSobuActionPerformed

    private void btnOdustaniSobaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdustaniSobaActionPerformed
        dispose();
    }//GEN-LAST:event_btnOdustaniSobaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SobeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SobeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SobeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SobeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SobeView dialog = new SobeView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAzurirajSobu;
    private javax.swing.JButton btnOdustaniSoba;
    private javax.swing.JButton btnSPremiSobu;
    private javax.swing.JCheckBox chLjubimci;
    private javax.swing.JCheckBox chNovoLjubimci;
    private javax.swing.JCheckBox chNovoPusenje;
    private javax.swing.JCheckBox chNovoRezervirana;
    private javax.swing.JCheckBox chPusenje;
    private javax.swing.JCheckBox chRezervirana;
    private javax.swing.JComboBox<String> cmbNoviTipSobe;
    private javax.swing.JComboBox<String> cmbTipSobe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSobe;
    private javax.swing.JTextField txtBrojSobe;
    private javax.swing.JTextField txtCijenaSobe;
    private javax.swing.JTextField txtNovaCijenaSobe;
    private javax.swing.JTextField txtNoviBrojSobe;
    // End of variables declaration//GEN-END:variables

    private void prikaziSobe() {
        ((DefaultTableModel) tblSobe.getModel()).setNumRows(0);
        List<Soba> lista = controll.dohvatiSobe();
        for (Soba soba : lista) {
            Object[] rowData = {soba.getSifra_sobe(), soba.getBroj_sobe(), soba.getSifra_tipa().getSifra_tipa_sobe(), soba.isDozvoljeno_pusenje(), soba.isDozvoljeni_ljubimci(), soba.isRezervirana(), soba.getCijena()};
            ((DefaultTableModel) tblSobe.getModel()).addRow(rowData);
        }
    }

    private void prikaziTipoveSoba() {

        List<TipSobe> lista = controll.dohvatiTipoveSoba();

        for (TipSobe tipSobe : lista) {
            cmbTipSobe.addItem(tipSobe.getOpis_tipa_sobe());
            cmbNoviTipSobe.addItem(tipSobe.getOpis_tipa_sobe());
        }
    }

    ControllAdmin controll = new ControllAdmin();

}
